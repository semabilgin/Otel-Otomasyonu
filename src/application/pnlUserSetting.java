package application;


import enums.userEnum;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import properties.UserPro;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Huda
 */
public class pnlUserSetting extends javax.swing.JPanel {

    /**
     * Creates new form pnlUserSetting
     */
    public pnlUserSetting() {
        initComponents();
        kullaniciGetir();
        backGroundColor();
    }
    
    
    Db db = new Db("oteldenemeleri", "root", "");
    LoggerClass lg = new LoggerClass();
    ArrayList<UserPro> usp = new ArrayList<>();
    String id = "";
    String aid = "";

 public void backGroundColor() {
        this.setBackground(new Color(119, 119, 119));
        pnlUserSetting.setBackground(new Color(119, 119, 119));
        guncelleBtn.setBackground(new Color(75, 75, 75));
        silBtn.setBackground(new Color(75, 75, 75));
        kullaniciTable.setBackground(new Color(160, 160, 160));  
    }
    private void kullaniciGetir() {
        try {
            usp.clear();
            ResultSet rs = db.connect().executeQuery("call userSelectPro();");
            while (rs.next()) {
                UserPro u = new UserPro();
                u.setUser_id(rs.getString(""+userEnum.user_id));
                u.setUser_name(rs.getString(""+userEnum.user_name));
                u.setPassword(rs.getString(""+userEnum.password));
                u.setAuthory(rs.getString(""+userEnum.authory));
                u.setStaff_id(rs.getString(""+userEnum.staff_id));
                usp.add(u);
            }
            kullaniciDoldur();

        } catch (SQLException ex) {
            lg.loggerFunction(ex);
//            System.err.println("personel getirme hatasi " + ex);
        }
    }

    private void kullaniciDoldur() {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Kullanıcı Adı");
        dtm.addColumn("Parola");
        dtm.addColumn("Unvanı");

        for (UserPro item : usp) {
            String unvan = "Resepsiyonist";
            if (item.getAuthory().equals("1")) {
                unvan = "Yönetici";
            }
            String[] dizi = {item.getUser_name(), item.getPassword(), unvan};
            dtm.addRow(dizi);
        }
        kullaniciTable.setModel(dtm);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUserSetting = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        kullaniciTable = new javax.swing.JTable();
        guncelleBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        ytCmb = new javax.swing.JComboBox<>();
        silBtn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(600, 600));

        pnlUserSetting.setBorder(javax.swing.BorderFactory.createTitledBorder("Kullanıcı Ayarları"));

        kullaniciTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        kullaniciTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kullaniciTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(kullaniciTable);

        guncelleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/update.png"))); // NOI18N
        guncelleBtn.setText("Güncelle");
        guncelleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleBtnActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Yetki Türü");

        ytCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Resepsiyonist", "Yönetici" }));
        ytCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ytCmbİtemStateChanged(evt);
            }
        });

        silBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        silBtn.setText("Sil");
        silBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUserSettingLayout = new javax.swing.GroupLayout(pnlUserSetting);
        pnlUserSetting.setLayout(pnlUserSettingLayout);
        pnlUserSettingLayout.setHorizontalGroup(
            pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(pnlUserSettingLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(ytCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guncelleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(silBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlUserSettingLayout.setVerticalGroup(
            pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ytCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(pnlUserSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(silBtn)
                        .addComponent(guncelleBtn)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlUserSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlUserSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void kullaniciTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kullaniciTableMouseClicked
        id = usp.get(kullaniciTable.getSelectedRow()).getUser_id();
    }//GEN-LAST:event_kullaniciTableMouseClicked

    private void guncelleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guncelleBtnActionPerformed
        try {
            PreparedStatement pr = db.preConnect("call userUpdateAuthoryPro(?,?);");
            pr.setInt(1, Integer.valueOf(id));
            pr.setString(2, aid);
           int sonuc= pr.executeUpdate();
          if(sonuc>0){
            kullaniciGetir();
              JOptionPane.showMessageDialog(this, "yetki güncelleme başarılı");
          }
            
        } catch (SQLException ex) {
            lg.loggerFunction(ex);
//            System.err.println("yetki güncelleme hatası " + ex);
        }
    }//GEN-LAST:event_guncelleBtnActionPerformed

    private void ytCmbİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ytCmbİtemStateChanged
        aid = String.valueOf(ytCmb.getSelectedIndex());
    }//GEN-LAST:event_ytCmbİtemStateChanged

    private void silBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silBtnActionPerformed
        try {
            PreparedStatement pr = db.preConnect("call userDeletePro(?);");
            pr.setInt(1, Integer.valueOf(id));
           int sonuc= pr.executeUpdate();
           if(sonuc>0){
            kullaniciGetir();
              JOptionPane.showMessageDialog(this, "kullanıcı silindi");
          }
        } catch (SQLException ex) {
            lg.loggerFunction(ex);
//            System.err.println("kullanıcı silme hatası " + ex);
        }
    }//GEN-LAST:event_silBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guncelleBtn;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable kullaniciTable;
    private javax.swing.JPanel pnlUserSetting;
    private javax.swing.JButton silBtn;
    private javax.swing.JComboBox<String> ytCmb;
    // End of variables declaration//GEN-END:variables
}
